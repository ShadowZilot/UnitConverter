package com.human_developing_soft.unitconverter.domainimport android.widget.Spinnerimport androidx.lifecycle.LifecycleOwnerimport androidx.lifecycle.MutableLiveDataimport androidx.lifecycle.ViewModel// TODO refactor this classclass UnitConvertingVM(    private val mUnitsList: UnitList,    indexPair: UnitIndexPair = UnitIndexPair.Base(0, 0)) : ViewModel(), Observer {    private var mConvertingPair: ConvertingPair = mUnitsList        .convertingFormulaForPair(            indexPair        )    private val mFirstLiveSelector = MutableLiveData<Int>()    private val mSecondLiveSelector = MutableLiveData<Int>()    init {        mFirstLiveSelector.value = indexPair.firstIndex()        mSecondLiveSelector.value = indexPair.secondIndex()    }    fun observeForUpdates(o: Spinner, isFirst: Boolean) {        if (isFirst) {            mFirstLiveSelector.observe(o.context as LifecycleOwner, {                o.setSelection(it)            })        } else {            mSecondLiveSelector.observe(o.context as LifecycleOwner, {                o.setSelection(it)            })        }    }    override fun update(content: UnitTextBundle) {        content.updateField(ConvertingHelper.Base(            mConvertingPair        ))    }    fun changeConvertingFormula(index: UnitIndexPair) {        mFirstLiveSelector.value = index.firstIndex()        mSecondLiveSelector.value = index.secondIndex()        mConvertingPair = mUnitsList.convertingFormulaForPair(index)    }    fun unitNames(): Array<String> {        return mUnitsList.unitsName()    }}