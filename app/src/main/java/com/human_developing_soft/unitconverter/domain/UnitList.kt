package com.human_developing_soft.unitconverter.domainimport com.human_developing_soft.unitconverter.ui.converting.view_wrappers.BundleManagerResponseimport com.human_developing_soft.unitconverter.units_storage.UnitSectionimport com.human_developing_soft.unitconverter.units_storage.data_loading.PrimaryUnitinterface UnitList {    fun unitsName(): Array<String>    fun convertingObjectForResponse(response: BundleManagerResponse): ConvertingObject    class Base(        private val mList: List<PrimaryUnit>    ) : UnitList {        constructor(initSection: UnitSection) : this(initSection.primaryUnits())        override fun unitsName(): Array<String> {            val namesList = mutableListOf<String>()            for (unit in mList) {                namesList.add(unit.unitName())            }            return namesList.toTypedArray()        }        override fun convertingObjectForResponse(response: BundleManagerResponse): ConvertingObject {            return ConvertingObject.Base(                response.mainBundle { index ->                    mList[index].formulaShell()                },                response.mapTo { index ->                    mList[index].formulaShell()                }            )        }    }}