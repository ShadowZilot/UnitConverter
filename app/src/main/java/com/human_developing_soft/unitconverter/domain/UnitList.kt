package com.human_developing_soft.unitconverter.domainimport com.human_developing_soft.unitconverter.units_storage.UnitSectionimport com.human_developing_soft.unitconverter.units_storage.data_loading.PrimaryUnitinterface UnitList {    fun unitsName(): Array<String>    fun convertingFormulaForPair(pair: UnitIndexPair): ConvertingPair    class Base(        private val mList: List<PrimaryUnit>    ) : UnitList {        constructor(initSection: UnitSection): this(initSection.primaryUnits())        override fun unitsName(): Array<String> {            val namesList = mutableListOf<String>()            for (unit in mList) {                namesList.add(unit.unitName())            }            return namesList.toTypedArray()        }        override fun convertingFormulaForPair(pair: UnitIndexPair): ConvertingPair {            return ConvertingPair.Base(                mList[pair.firstIndex()].formulaShell(),                mList[pair.secondIndex()].formulaShell()            )        }    }}