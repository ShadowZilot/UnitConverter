package com.human_developing_soft.unitconverter.ui.convertingimport android.os.Bundleimport androidx.appcompat.app.AppCompatActivityimport androidx.lifecycle.ViewModelProviderimport com.human_developing_soft.unitconverter.Rimport com.human_developing_soft.unitconverter.databinding.ActivityMainBindingimport com.human_developing_soft.unitconverter.domain.ConvertingViewModelimport com.human_developing_soft.unitconverter.domain.UnitConvertingVMimport com.human_developing_soft.unitconverter.domain.UnitConvertingVMFactoryimport com.human_developing_soft.unitconverter.ui.converting.view_wrappers.CVBuilderimport com.human_developing_soft.unitconverter.ui.converting.view_wrappers.UiConvertingManagerimport com.human_developing_soft.unitconverter.ui.converting.view_wrappers.UiElementsHolderimport com.human_developing_soft.unitconverter.units_storage.data_loading.ContextLoadingimport com.human_developing_soft.unitconverter.units_storage.data_loading.UnitDataJSONclass MainActivity : AppCompatActivity() {    private lateinit var mModel: ConvertingViewModel    private lateinit var mBinding: ActivityMainBinding    private lateinit var mUiManager: UiConvertingManager    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        mBinding = ActivityMainBinding.inflate(layoutInflater)        setContentView(mBinding.root)        mModel = ViewModelProvider(            this,            UnitConvertingVMFactory(                UnitDataJSON.Base(                    R.raw.volume_units,                    ContextLoading(baseContext)                )            )        ).get(UnitConvertingVM::class.java)        mUiManager = UiConvertingManager.Base(            mModel,            UiElementsHolder.Base(                CVBuilder.Base(                    mBinding.convertingViewList                )            ),            mBinding.addConvertingView        )        mModel.addObserver(mUiManager)    }}